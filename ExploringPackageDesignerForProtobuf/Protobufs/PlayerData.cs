// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PlayerData.proto</summary>
public static partial class PlayerDataReflection {

  #region Descriptor
  /// <summary>File descriptor for PlayerData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PlayerDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBQbGF5ZXJEYXRhLnByb3RvGg9pdGVtX2RhdGEucHJvdG8iTwoKUGxheWVy",
          "RGF0YRIUCgxkYXRhX3ZlcnNpb24YASABKAUSEQoJcGxheWVyX0lEGAIgASgM",
          "EhgKBWl0ZW1zGAMgAygLMgkuSXRlbURhdGFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ItemDataReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerData), global::PlayerData.Parser, new[]{ "DataVersion", "PlayerID", "Items" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PlayerData : pb::IMessage<PlayerData> {
  private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerData(PlayerData other) : this() {
    dataVersion_ = other.dataVersion_;
    playerID_ = other.playerID_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerData Clone() {
    return new PlayerData(this);
  }

  /// <summary>Field number for the "data_version" field.</summary>
  public const int DataVersionFieldNumber = 1;
  private int dataVersion_;
  /// <summary>
  ///git hash and/or file hashes
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DataVersion {
    get { return dataVersion_; }
    set {
      dataVersion_ = value;
    }
  }

  /// <summary>Field number for the "player_ID" field.</summary>
  public const int PlayerIDFieldNumber = 2;
  private pb::ByteString playerID_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString PlayerID {
    get { return playerID_; }
    set {
      playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ItemData> _repeated_items_codec
      = pb::FieldCodec.ForMessage(26, global::ItemData.Parser);
  private readonly pbc::RepeatedField<global::ItemData> items_ = new pbc::RepeatedField<global::ItemData>();
  /// <summary>
  ///can use the two-pass parsing method used inside of item data as well to isolate higher level changes if needed
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ItemData> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DataVersion != other.DataVersion) return false;
    if (PlayerID != other.PlayerID) return false;
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DataVersion != 0) hash ^= DataVersion.GetHashCode();
    if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DataVersion != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DataVersion);
    }
    if (PlayerID.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(PlayerID);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DataVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataVersion);
    }
    if (PlayerID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PlayerID);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerData other) {
    if (other == null) {
      return;
    }
    if (other.DataVersion != 0) {
      DataVersion = other.DataVersion;
    }
    if (other.PlayerID.Length != 0) {
      PlayerID = other.PlayerID;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DataVersion = input.ReadInt32();
          break;
        }
        case 18: {
          PlayerID = input.ReadBytes();
          break;
        }
        case 26: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
